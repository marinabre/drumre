@model Projekt.Models.RecommendViewModel

@{
    ViewBag.Title = "Recommend";
}

<script type="text/javascript" src="/Scripts/GiantHat.js"></script>
<style>
    .Profile, .Friends, .Community {
        cursor: pointer;
    }
    .Profile:hover, .Friends:hover, .Community:hover{
        color: #fcc60a;
    }
    *, *:before, *:after {
  box-sizing: border-box;
}
input[type="range"] {
  display: inline-block;
  width: 100%;
}

.range-slider {
  margin: 15px 0 0 0%;
}

.range-slider {
  width: 100%;
}

.range-slider__range {
    display:inline-block;
  -webkit-appearance: none;
  width: calc(100% - (200px));
  height: 10px;
  border-radius: 5px;
  background: #e7ebee;
  outline: none;
  padding: 0;
  margin: 0;
}
.range-slider__range::-webkit-slider-thumb {
  -webkit-appearance: none;
          appearance: none;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #39100a;
  cursor: pointer;
  -webkit-transition: background .15s ease-in-out;
  transition: background .15s ease-in-out;
}
.range-slider__range::-webkit-slider-thumb:hover {
  background: #eaaa00;
}
.range-slider__range:active::-webkit-slider-thumb {
  background: #eaaa00;
}
.range-slider__range::-moz-range-thumb {
  width: 20px;
  height: 20px;
  border: 0;
  border-radius: 50%;
  background: #39100a;
  cursor: pointer;
  -webkit-transition: background .15s ease-in-out;
  transition: background .15s ease-in-out;
}
.range-slider__range::-moz-range-thumb:hover {
  background: #1abc9c;
}
.range-slider__range:active::-moz-range-thumb {
  background: #1abc9c;
}

.range-slider__value {
  display: inline-block;
  position: relative;
  width: 60px;
  color: #fff;
  line-height: 20px;
  text-align: center;
  border-radius: 3px;
  background: #39100a;
  padding: 5px 10px;
  margin-left: 8px;
}
.range-slider__value:after {
  position: absolute;
  top: 8px;
  left: -7px;
  width: 0;
  height: 0;
  border-top: 7px solid transparent;
  border-right: 7px solid #39100a;
  border-bottom: 7px solid transparent;
  content: '';
}

::-moz-range-track {
  background: #e7ebee;
  border: 0;
}

input::-moz-focus-inner,
input::-moz-focus-outer {
  border: 0;
}
</style>



<h2>Recommend</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <div  class="Profile">
            <h3>Profile based recommendations</h3>
         </div>
        <p>
            Here you can pick out numeric values for given properties of movies.
            Values here represent the number of your top favourites which will be used to 
            recommend movies for you.
        </p>
        <div class="ProfileDetails">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  <div class="range-slider">  
                    <input class="range-slider__range form-control" id="Genres" name="Genres" type="range" value="10" min="0" max="20">  
                    <span class="range-slider__value">0</span>
                    </div>

            </div>
                </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                     <div class="range-slider">
                        <input class="range-slider__range form-control" id="Actors" name="Actors" type="range" value="10" min="0" max="20">
                        <span class="range-slider__value">0</span>
                    </div>
                 </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Directors, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="range-slider">
                        <input class="range-slider__range form-control" id="Directors" name="Directors" type="range" value="10" min="0" max="20">
                        <span class="range-slider__value">0</span>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="Friends">
            <h3>Friends based recommendations</h3>
        </div>        
        <p>
            This group of recommending properties are based on what you share with your facebook friends.            
        </p>

        <div class="FriendsDetails">
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Gender)
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaxAgeDifference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxAgeDifference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxAgeDifference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimalFriendsTogether, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimalFriendsTogether, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimalFriendsTogether, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimalMoviesTogether, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimalMoviesTogether, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimalMoviesTogether, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>        
        <hr />
        <div class="Community">
            <h3>Community based recommendations</h3>
        </div>        
        <p>
            Something something giant hat.
        </p>

        <div class="CommunityDetails">
            <div class="form-group">
                @Html.LabelFor(model => model.GenderComm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.GenderComm)
                        @Html.ValidationMessageFor(model => model.GenderComm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaxAgeDifferenceComm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxAgeDifferenceComm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxAgeDifferenceComm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimalFriendsTogetherComm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimalFriendsTogetherComm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimalFriendsTogetherComm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinimalMoviesTogetherComm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimalMoviesTogetherComm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimalMoviesTogetherComm, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Recommend me something!" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

var rangeSlider = function(){
  var slider = $('.range-slider'),
      range = $('.range-slider__range'),
      value = $('.range-slider__value');
    
  slider.each(function(){

    value.each(function(){
      var value = $(this).prev().attr('value');
      $(this).html(value);
    });

    range.on('input', function(){
      $(this).next(value).html(this.value);
    });
  });
};

rangeSlider();
</script>
}

